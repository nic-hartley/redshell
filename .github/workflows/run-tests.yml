name: Pre-merge tests
run-name: Testing ${{github.ref_name}}
# no permission for the token, this runs on pull requests
permissions: {}
on:
  push:
    tags-ignore: '**'
    branches: '**'
  schedule:
  # run twice a week to keep mostly up-to-date with crate updates, nightly
  - cron: '0 0 * * 0,3'
jobs:


  unit-and-integration:
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, "1.64", nightly]
        platform: [windows, ubuntu]
        run: [single, rayon]  # TODO: std_multi
        sys: [nop, cli_crossterm, gui_softbuffer]
        include:
        - std: ""
        - run: orig
          std: "std"
        - run: single
          std: "std"
        - run: rayon
          std: "std"
        - sys: nop
          std: "std"
        - sys: cli_crossterm
          std: "std"
        - sys: gui_softbuffer
          std: "std"
    name: Rust ${{ matrix.rust }} on ${{ matrix.platform }}, runner ${{ matrix.run }}, IO ${{ matrix.sys }}
    runs-on: ${{ matrix.platform }}-latest
    steps:
    - uses: actions/cache@v3
      with:
        path: ~/.rustup/
        key: rustup-${{ matrix.platform }}-${{ matrix.rust }}
    - uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: cargo-cache
    - uses: actions/cache@v3
      with:
        path: ./target
        key: target-dir-${{ matrix.platform }}-${{ matrix.rust }}
    - name: Set up Rust
      run: |
        rustup default ${{ matrix.rust }}
        rustup component add rustfmt

    - uses: actions/checkout@v3
    - name: Run tests
      env:
        features: run_${{ matrix.run }},io_${{ matrix.sys }},${{ matrix.std }}
      run: |
        cargo fmt --check
        cargo check --features "${{ env.features }}" --all-targets
        cargo test --features "${{ env.features }}" --all-targets


  mass-events:
    strategy:
      fail-fast: false
      matrix:
        run: [orig, single, rayon]
        include:
        - std: ""
        - run: orig
          std: "std"
        - run: single
          std: "std"
        - run: rayon
          std: "std"
    name: mass-events on runner ${{ matrix.run }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/cache@v3
      with:
        path: ~/.rustup/
        key: rustup-ubuntu-stable
    - uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: cargo-cache
    - uses: actions/cache@v3
      with:
        path: ./target
        key: target-dir-ubuntu-stable
    - name: Set up Rust
      run: |
        rustup default stable

    - uses: actions/checkout@v3
    - name: Deploy events
      env:
        features: run_${{ matrix.run }},io_nop,${{ matrix.std }}
      run: |
        cargo run --release --bin mass-events --features "${{ env.features }}"
